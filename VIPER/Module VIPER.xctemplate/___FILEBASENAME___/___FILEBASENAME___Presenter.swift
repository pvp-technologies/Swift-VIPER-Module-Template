//
//  ___FILENAME___
//  ___PROJECTNAME___
//
//  Created ___FULLUSERNAME___ on ___DATE___.
//  Copyright Â© ___YEAR___ ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Stephan Yannick @YannickSteph
//

import Foundation

// MARK: - ___VARIABLE_moduleName___Presenter

final class ___VARIABLE_moduleName___Presenter {

    // MARK: Properties

    private weak var view: ___VARIABLE_moduleName___ViewProtocol?
    private let interactor: ___VARIABLE_moduleName___InteractorProtocol
    private let wireframe: ___VARIABLE_moduleName___WireframeProtocol
    private let parameters: ___VARIABLE_moduleName___.Parameters
    
    // MARK: Initializers
    
    init(view: ___VARIABLE_moduleName___ViewProtocol, interactor: ___VARIABLE_moduleName___InteractorProtocol, wireframe: ___VARIABLE_moduleName___WireframeProtocol, parameters: ___VARIABLE_moduleName___.Parameters) {
        self.view = view
        self.interactor = interactor
        self.wireframe = wireframe
        self.parameters = parameters
    }
    
    // FIXME: Without params
    /*
    init(view: ___VARIABLE_moduleName___ViewProtocol, interactor: ___VARIABLE_moduleName___InteractorProtocol, wireframe: ___VARIABLE_moduleName___WireframeProtocol) {
        self.view = view
        self.interactor = interactor
        self.wireframe = wireframe
    }
    */
}

// MARK: - ___VARIABLE_moduleName___PresenterProtocol extensions

extension ___VARIABLE_moduleName___Presenter: ___VARIABLE_moduleName___PresenterProtocol {

}
