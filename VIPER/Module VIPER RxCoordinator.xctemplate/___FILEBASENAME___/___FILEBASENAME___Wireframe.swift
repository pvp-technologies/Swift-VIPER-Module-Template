//
//  ___FILENAME___
//  ___PROJECTNAME___
//
//  Created by ___FULLUSERNAME___ on ___DATE___.
//  Copyright (c) ___YEAR___ ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the BVIPER OpenFleet Xcode Templates.
//

import UIKit
import RxCoordinator

// MARK: - ___VARIABLE_moduleName___Wireframe

final class ___VARIABLE_moduleName___Wireframe: BaseWireframeProtocol {

    // MARK: Properties

    // TODO: Give route name
    private let coordinator: AnyCoordinator<<#RouteName#>>

    // MARK: Create module
    
    static func createModule(with parameters: ___VARIABLE_moduleName___.Parameters) -> ___VARIABLE_moduleName___ViewController {
        
        let view = StoryboardScene.___VARIABLE_moduleName___.___VARIABLE_moduleName___ViewController.instantiate()
        let interactor = ___VARIABLE_moduleName___Interactor()
        let wireframe = ___VARIABLE_moduleName___Wireframe()
        let presenter = ___VARIABLE_moduleName___Presenter(interface: view, interactor: interactor, wireframe: wireframe, parameters: parameters)
        
        view.presenter = presenter
        coordinator = parameters.coordinator
        
        return view
    }
}

// MARK: - ___VARIABLE_moduleName___WireframeProtocol implementation

extension ___VARIABLE_moduleName___Wireframe: ___VARIABLE_moduleName___WireframeProtocol {
    
    // TODO: Name Route
    func navigate(to option: AnyCoordinator<<#RouteName#>>) {
        self.coordinator.transition(to: option).presentation
    }
}
